# Эта строка импортирует библиотеку numpy, 
# которая предоставляет функции для работы с числами.
import numpy as np

# Здесь генерируется случайное число в диапазоне от 1 до 100 (включительно) 
# Затем происходит его сохранение в переменной number.
number = np.random.randint(1, 101)

# Функция check принимает число mid и сравнивает его с загаданным числом. 
# Если mid меньше загаданного числа, функция возвращает 1. 
# Если mid больше загаданного числа, функция возвращает -1. 
# Если mid равно загаданному числу, функция возвращает 0.
def check(mid):
    if mid < number:
        return 1
    elif mid > number:
        return -1
    else:
        return 0

# Функция guess_number инициализирует переменные low, high и count. 
# low и high определяют диапазон чисел, в котором мы ищем загаданное число. 
# count считает количество попыток, которые мы сделали, чтобы угадать число.
def guess_number():
    low = 1
    high = 100
    count = 0

    # В этом цикле мы берем среднее значение между low и high и сохраняем его в mid
    # Цикл выполняется, пока нижняя граница low не превысит верхнюю границу high. 
    # Это условие гарантирует, что мы не выйдем за пределы диапазона чисел, в котором ищем загаданное число.
    # Формула "mid = (low + high) // 2" является частью алгоритма бинарного поиска, подробнее в readme.md. 
    # Затем мы увеличиваем count на 1, так как мы сделали еще одну попытку угадать число.
    while low <= high:
        mid = (low + high) // 2
        count += 1

        # Здесь мы вызываем функцию check с mid в качестве аргумента и сохраняем результат в result.
        result = check(mid)

        # Если result равен -1, это означает, что mid больше загаданного числа, поэтому мы уменьшаем high до mid - 1. 
        # Если result равен 1, это означает, что mid меньше загаданного числа, поэтому мы увеличиваем low до mid + 1. 
        # Если result равен 0, это означает, что мы угадали число, и функция возвращает mid и count.
        if result == -1:
            high = mid - 1
        elif result == 1:
            low = mid + 1
        else:
            return mid, count

#Здесь мы вызываем функцию guess_number, сохраняем результаты в number и count, а затем выводим их.
number, count = guess_number()
print(f"Загаданное число: {number}, количество попыток: {count}")
